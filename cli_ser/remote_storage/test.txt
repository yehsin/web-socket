Hello Socket Programming!
網路插座（英語：Network socket；又譯網路插座、網路介面、網路插槽）在電腦科學中是電腦網路中行程間資料串流的端點。使用以網際協定（Internet Protocol）為通訊基礎的網路插座，稱為網際插座（Internet socket）。因為網際協定的流行，現代絕大多數的網路插座，都是屬於網際插座。socket是一種作業系統提供的行程間通訊機制。在作業系統中，通常會為應用程式提供一組應用程式介面（API），稱為插座介面（英語：socket API）。應用程式可以通過插座介面，來使用網路插座，以進行資料交換。最早的插座介面來自於4.2 BSD，因此現代常見的插座介面大多源自Berkeley插座（Berkeley sockets）標準。在插座介面中，以IP位址及通訊埠組成插座位址（socket address）。遠端的插座位址，以及原生的插座位址完成連線後，再加上使用的協定（protocol），這個五元組（five-element tuple），作為插座對（socket pairs），之後就可以彼此交換資料。例如，在同一台電腦上，TCP協定與UDP協定可以同時使用相同的port而互不干擾。 作業系統根據插座位址，可以決定應該將資料送達特定的行程或執行緒。這就像是電話系統中，以電話號碼加上分機號碼，來決定通話物件一般。
系統內部介面（內部網路），介面描述符（抽象介面描述符）和介面位址之間的差別其實很細微，日常編程用的時候幾乎不做區別。並且詳細的網路介面有下面幾種特徵：本地介面位址，由本地ip位址和（包括TCP，UDP）埠號傳輸協定，例如TCP、UDP、raw IP協定，如果只是指定IP位址，那麼TCP 53與UDP 53不是一個介面。一個已經建立連接的介面雙方都有整數形式的介面描述符，用來唯一表示該介面。作業系統根據對方介面發過來的IP以及傳輸協定頭資訊來提取介面的位址資訊，並且將應用資料去除頭資訊之後提交給相應的應用程式。 在很多網路協定、教科書以及本文中，介面指的是有一個獨一無二的介面號的實體。在一些其他的文章[來源請求]當中，介面被叫做本地介面位址，比如..."ip和埠的結合"。在一RFC147標準中，這個定義與1971的ARPA網有關，介面指的是一個32位元數字，其中偶數的是接收介面，奇數的是傳送介面，但是今天通訊已經可以實現雙向傳輸，在一個介面中，可以傳送的同時還可以接收。
在類UNIX系統和Windows系統，命令列工具netstat和ss可用以檢視目前系統的介面情況。
2019 HSNL TAs.
